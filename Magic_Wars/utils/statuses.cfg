#define MW_DEFINE_STATUSES
	[event]
		name=preload
		first_time_only=no
		[lua]
			code=<<
				local old_unit_status = wesnoth.theme_items.unit_status
				function wesnoth.theme_items.unit_status()
					local u = wesnoth.get_displayed_unit()
					if not u then return {} end
					local s = old_unit_status()
					if u.status.deepwound4 then
						table.insert(s, { "element", {
							image = "status/blood-drop-mini.png",
							tooltip = "deeply wounded: This unit has taken a deep wound. It loses 1 movement, is unhealable, and takes 4 damage per turn for the next 4 turns."
						} })
					end
					return s
				end
			>>
		[/lua]
		[lua]
			code=<<
				local old_unit_status = wesnoth.theme_items.unit_status
				function wesnoth.theme_items.unit_status()
					local u = wesnoth.get_displayed_unit()
					if not u then return {} end
					local s = old_unit_status()
					if u.status.deepwound3 then
						table.insert(s, { "element", {
							image = "status/blood-drop-mini.png",
							tooltip = "deeply wounded: This unit has taken a deep wound. It loses 1 movement, is unhealable, and takes 4 damage per turn for the next 3 turns."
						} })
					end
					return s
				end
			>>
		[/lua]
		[lua]
			code=<<
				local old_unit_status = wesnoth.theme_items.unit_status
				function wesnoth.theme_items.unit_status()
					local u = wesnoth.get_displayed_unit()
					if not u then return {} end
					local s = old_unit_status()
					if u.status.deepwound2 then
						table.insert(s, { "element", {
							image = "status/blood-drop-mini.png",
							tooltip = "deeply wounded: This unit has taken a deep wound. It loses 1 movement, is unhealable, and takes 4 damage per turn for the next 2 turns."
						} })
					end
					return s
				end
			>>
		[/lua]
		[lua]
			code=<<
				local old_unit_status = wesnoth.theme_items.unit_status
				function wesnoth.theme_items.unit_status()
					local u = wesnoth.get_displayed_unit()
					if not u then return {} end
					local s = old_unit_status()
					if u.status.deepwound1 then
						table.insert(s, { "element", {
							image = "status/blood-drop-mini.png",
							tooltip = "deeply wounded: This unit has taken a deep wound. It loses 1 movement, is unhealable, and takes 4 damage per turn for the next turn."
						} })
					end
					return s
				end
			>>
		[/lua]
	[/event]
#enddef

#define MW_STATUS_EFFECTS
	[event]
		name=turn refresh
		first_time_only=no
		{MW_STORE_UNIT no_longer_bleeding (
			side=$side_number
			[filter_wml]
				[status]
					deepwound1=yes
				[/status]
			[/filter_wml]
		)}
		{FOREACH no_longer_bleeding i}
			{CLEAR_VARIABLE no_longer_bleeding[$i].status.deepwound1}
			{CLEAR_VARIABLE no_longer_bleeding[$i].status.unhealable}
			{MW_UNSTORE_UNIT no_longer_bleeding}
		{NEXT i}
		{CLEAR_VARIABLE no_logner_bleeding}
		{MW_STORE_UNIT bleeding_unit (
			side=$side_number
			[and]
				[filter_wml]
					[status]
						deepwound4=yes
					[/status]
				[/filter_wml]
				[or]
					[filter_wml]
						[status]
							deepwound3=yes
						[/status]
					[/filter_wml]
				[/or]
				[or]
					[filter_wml]
						[status]
							deepwound2=yes
						[/status]
					[/filter_wml]
				[/or]
			[/and]
		)}
		{FOREACH bleeding_unit i}
			{VARIABLE_OP bleeding_unit[$i].moves add -1}
# It is important to do this in reverse order so that the status isn't removed immediately.
			[if]
				{MW_VARIABLE bleeding_unit[$i].status.deepwound2 equals yes}
				[then]
					{CLEAR_VARIABLE bleeding_unit[$i].status.deepwound2}
					{VARIABLE bleeding_unit[$i].status.deepwound1 yes}
				[/then]
			[/if]
			[if]
				{MW_VARIABLE bleeding_unit[$i].status.deepwound3 equals yes}
				[then]
					{CLEAR_VARIABLE bleeding_unit[$i].status.deepwound3}
					{VARIABLE bleeding_unit[$i].status.deepwound2 yes}
				[/then]
			[/if]
			[if]
				{MW_VARIABLE bleeding_unit[$i].status.deepwound4 equals yes}
				[then]
					{CLEAR_VARIABLE bleeding_unit[$i].status.deepwound4}
					{VARIABLE bleeding_unit[$i].status.deepwound3 yes}
				[/then]
			[/if]
			{MW_UNSTORE_UNIT bleeding_unit[$i]}
			[harm_unit]
				[filter]
					x,y=$bleeding_unit[$i].x,$bleeding_unit[$i].y
				[/filter]
				amount=4
				kill=no
				animate=yes
			[/harm_unit]
		{NEXT i}
		{CLEAR_VARIABLE bleeding_unit}
		{MW_STORE_UNIT affected_unit side=$side_number}
		{FOREACH affected_unit i}
			[if]
				{MW_VARIABLE affected_unit[$i].variables.petrify_turns equals 0}
				[then]
					{VARIABLE affected_unit[$i].status.petrified no}
				[/then]
			[/if]
			[if]
				{MW_VARIABLE affected_unit[$i].variables.spellproof equals 0}
				[then]
					{CLEAR_VARIABLE affected_unit[$i].abilities.spellproof}
				[/then]
			[/if]
			[if]
				{MW_VARIABLE affected_unit[$i].variables.skip_turn equals yes}
				[then]
					{VARIABLE affected_unit[$i].moves 0}
					{VARIABLE affected_unit[$i].attacks_left 0}
					{CLEAR_VARIABLE affected_unit[$i].variables.skip_turn}
				[/then]
			[/if]
			{VARIABLE_OP affected_unit[$i].variables.petrify_turns add -1}
			{VARIABLE_OP affected_unit[$i].variables.spellproof add -1}
			{MW_UNSTORE_UNIT affected_unit[$i]}
		{NEXT i}
	[/event]
#enddef